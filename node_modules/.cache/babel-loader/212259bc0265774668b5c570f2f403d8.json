{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/astrid/Desktop/projetoCurie/labefy/src/components/AllPlaylists.js\";\nimport React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { baseUrl, auth } from \"./constants\";\nimport CreatePlaylist from \"./CreatePlaylist\";\nexport default class AllPlaylists extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      addPlaylistForm: false,\n      savedplaylists: []\n    };\n\n    this.componentDidMount = () => {\n      this.renderSavedPlaylists();\n    };\n\n    this.renderSavedPlaylists = () => {\n      axios.get(baseUrl, auth).then(response => {\n        this.setState({\n          savedplaylists: response.data.result.list\n        });\n      }).catch(error => {\n        alert(`It wasn't possible to show the saved playlists. ${error.message}`);\n      });\n    };\n\n    this.deletePlaylist = savedplaylist => {\n      axios.delete(`${baseUrl}/${savedplaylist.id}`, auth).then(() => {\n        this.renderSavedPlaylists();\n      }).catch(error => {\n        alert(`It wasn't possible to delete that playlist. ${error.message}`);\n      });\n    };\n\n    this.showAddPlaylistForm = () => {\n      this.setState({\n        addPlaylistForm: !this.state.addPlaylistForm\n      });\n      console.log(this.state.addPlaylistForm);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AllPlaylists\",\n      children: [this.state.addPlaylistForm && /*#__PURE__*/_jsxDEV(CreatePlaylist, {\n        getPlaylists: this.renderSavedPlaylists\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.showAddPlaylistForm,\n        children: \"Add a playlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Playlists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.savedplaylists.map(savedplaylist => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"savedPlaylists\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: savedplaylist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.deletePlaylist,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"See tracks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }, this)]\n          }, savedplaylist.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/astrid/Desktop/projetoCurie/labefy/src/components/AllPlaylists.js"],"names":["React","styled","axios","baseUrl","auth","CreatePlaylist","AllPlaylists","Component","state","addPlaylistForm","savedplaylists","componentDidMount","renderSavedPlaylists","get","then","response","setState","data","result","list","catch","error","alert","message","deletePlaylist","savedplaylist","delete","id","showAddPlaylistForm","console","log","render","map","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,aAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACtDC,KADsD,GAC9C;AACJC,MAAAA,eAAe,EAAE,KADb;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KAD8C;;AAAA,SAMtDC,iBANsD,GAMlC,MAAM;AACtB,WAAKC,oBAAL;AACH,KARqD;;AAAA,SAUtDA,oBAVsD,GAU/B,MAAM;AACzBV,MAAAA,KAAK,CAACW,GAAN,CAAUV,OAAV,EAAmBC,IAAnB,EACCU,IADD,CACOC,QAAD,IAAc;AAChB,aAAKC,QAAL,CAAc;AAACN,UAAAA,cAAc,EAAGK,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqBC;AAAvC,SAAd;AACH,OAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdC,QAAAA,KAAK,CAAE,mDAAkDD,KAAK,CAACE,OAAQ,EAAlE,CAAL;AACH,OAND;AAOH,KAlBqD;;AAAA,SAoBtDC,cApBsD,GAoBpCC,aAAD,IAAmB;AAChCvB,MAAAA,KAAK,CAACwB,MAAN,CAAc,GAAEvB,OAAQ,IAAGsB,aAAa,CAACE,EAAG,EAA5C,EAA+CvB,IAA/C,EACCU,IADD,CACM,MAAM;AACR,aAAKF,oBAAL;AAEH,OAJD,EAKCQ,KALD,CAKQC,KAAD,IAAW;AACdC,QAAAA,KAAK,CAAE,+CAA8CD,KAAK,CAACE,OAAQ,EAA9D,CAAL;AAEH,OARD;AASH,KA9BqD;;AAAA,SAgCtDK,mBAhCsD,GAgChC,MAAM;AACxB,WAAKZ,QAAL,CAAc;AAACP,QAAAA,eAAe,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAA9B,OAAd;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtB,KAAL,CAAWC,eAAvB;AACH,KAnCqD;AAAA;;AAqCtDsB,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACK,KAAKvB,KAAL,CAAWC,eAAX,iBAA8B,QAAC,cAAD;AAAgB,QAAA,YAAY,EAAE,KAAKG;AAAnC;AAAA;AAAA;AAAA;AAAA,cADnC,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKgB,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBACK,KAAKpB,KAAL,CAAWE,cAAX,CAA0BsB,GAA1B,CAA+BP,aAAD,IAAmB;AAC9C,8BACI;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,oCACI;AAAA,wBAAKA,aAAa,CAACQ;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAQ,cAAA,OAAO,EAAE,KAAKT,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAAqCC,aAAa,CAACE,EAAnD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SARA;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AAxDqD","sourcesContent":["import React from \"react\";\nimport \"../App.css\"\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport { baseUrl, auth } from \"./constants\";\nimport CreatePlaylist from \"./CreatePlaylist\"\n\nexport default class AllPlaylists extends React.Component {\n    state = {\n        addPlaylistForm: false,\n        savedplaylists: [],\n    }\n\n    componentDidMount = () => {\n        this.renderSavedPlaylists()\n    }\n\n    renderSavedPlaylists = () => {\n        axios.get(baseUrl, auth)\n        .then((response) => {\n            this.setState({savedplaylists : response.data.result.list})\n        })\n        .catch((error) => {\n            alert(`It wasn't possible to show the saved playlists. ${error.message}`)\n        })\n    }\n\n    deletePlaylist = (savedplaylist) => {\n        axios.delete(`${baseUrl}/${savedplaylist.id}`, auth)\n        .then(() => {\n            this.renderSavedPlaylists()\n            \n        })\n        .catch((error) => {\n            alert(`It wasn't possible to delete that playlist. ${error.message}`)\n            \n        })\n    }\n\n    showAddPlaylistForm = () => {\n        this.setState({addPlaylistForm: !this.state.addPlaylistForm})\n        console.log(this.state.addPlaylistForm)\n    }\n\n    render () {\n        return (\n            <div className=\"AllPlaylists\">\n                {this.state.addPlaylistForm && <CreatePlaylist getPlaylists={this.renderSavedPlaylists}/>}\n                <button onClick={this.showAddPlaylistForm}>Add a playlist</button>\n                <h2>Playlists</h2>\n                <ul>\n                    {this.state.savedplaylists.map((savedplaylist) => {\n                        return (\n                            <div className=\"savedPlaylists\" key={savedplaylist.id}>\n                                <li>{savedplaylist.name}</li>\n                                <button onClick={this.deletePlaylist}>x</button>\n                                <button>See tracks</button>\n                            </div>\n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}